{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/DeleteButton.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","person","put","response","delete","Filter","filter","onChange","value","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","DeleteButton","handleOnDelete","onClick","Persons","persons","map","name","number","Notification","message","className","App","useState","setPersons","setNewNumber","setNewName","newFilter","setFilter","notify","setNotify","useEffect","personService","personsToShow","toLowerCase","includes","handleOnUpdate","updatedPerson","personData","newListPersons","setTimeout","catch","error","p","event","target","preventDefault","findedPerson","find","window","confirm","newPerson","checkInput","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76abf8b2.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(res=>res.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(res=>res.data)\r\n}\r\n\r\nconst update = (id,person) => {\r\n  return axios\r\n      .put(`${baseUrl}/${id}`, person)\r\n      .then(response => response.data)\r\n}\r\n\r\nconst Delete = (id) =>{\r\n  return axios\r\n  .delete(`${baseUrl}/${id}`)\r\n  .then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update ,\r\n  Delete : Delete\r\n}","import React from 'react'\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>Filter show with: <input value={filter} onChange={onChange} /></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit, newName, handleNameChange, newNumber, handleNumberChange}) =>\r\n  <form onSubmit={onSubmit}>\r\n        <div>\r\n            name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n            number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst DeleteButton = ({ person, handleOnDelete }) => {\r\n    return <button\r\n        onClick={() => handleOnDelete(person)}>\r\n        delete\r\n            </button>\r\n}\r\n\r\nexport default DeleteButton","import React from 'react';\r\nimport DeleteButton from './DeleteButton'\r\n\r\nconst Persons = ({persons , handleOnDelete}) =>{ \r\n    return persons.map(person =>\r\n        <div key={person.id}>\r\n                {person.name} {person.number}\r\n                <DeleteButton person = {person}\r\n                handleOnDelete = {handleOnDelete}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Persons","\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newNumber, setNewNumber] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newFilter, setFilter] = useState('');\r\n  const [notify, setNotify] = useState(null)\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n      .then(res =>\r\n        setPersons(res)\r\n      )\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const personsToShow = newFilter === ''\r\n    ? persons\r\n    : persons.filter(person =>\r\n      person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  const checkInput = () => {\r\n    const findedPerson = persons.find(person => person.name === newName)\r\n\r\n    if (findedPerson) {\r\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      if (result) {\r\n        const newPerson = {\r\n          id: findedPerson.id,\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        handleOnUpdate(newPerson)\r\n      }\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    if (checkInput()) {\r\n      const person = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .create(person)\r\n        .then((createdPerson) => {\r\n          setPersons(persons.concat(createdPerson))\r\n          setNewNumber('')\r\n          setNewName('')\r\n          setNotify(`${person.name} has been added`)\r\n          setTimeout(() => {\r\n          setNotify(null)}, 5000)\r\n        })\r\n        .catch(error => {\r\n          setNotify(error.response.data.error);\r\n          setTimeout(() => {\r\n            setNotify(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  };\r\n\r\n  const deletePerson = (person) => {\r\n    const res = window.confirm(`Delete ${person.name}`)\r\n    if (res) {\r\n      personService.Delete(person.id)\r\n      setPersons(persons.filter(p => p.id !== person.id))\r\n      setNotify(`${person.name} has been deleted`)\r\n          setTimeout(() => {\r\n          setNotify(null)}, 5000)\r\n          .catch(error => {\r\n            setNotify(error.response.data.error);\r\n            setTimeout(() => {\r\n              setNotify(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    }\r\n  \r\n\r\n  const handleOnUpdate = (updatedPerson) => {\r\n    personService.update(updatedPerson.id, updatedPerson).then(personData => {\r\n      let newListPersons = persons.map(person => person.name === personData.name ? personData : person)\r\n      setPersons(newListPersons)\r\n      setNewNumber('')\r\n      setNewName('')\r\n      setNotify(`${updatedPerson.name} has been updated`)\r\n      setTimeout(() => {\r\n      setNotify(null)}, 5000)\r\n    }).catch((error) => {\r\n      setNotify({\r\n        error: `Information for ${updatedPerson.name} has already been removed from server`,\r\n      });\r\n      setPersons(persons.filter(p => p.id !== updatedPerson.id))\r\n      setTimeout(() => {\r\n        setNotify(null);\r\n      }, 5000)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phone book</h1>\r\n      <Notification message={notify} />\r\n      <Filter filter={newFilter} onChange={handleFilterChange} />\r\n      <h2>Add a new number</h2>\r\n      <PersonForm onSubmit={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={personsToShow} handleOnDelete={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, \r\ndocument.getElementById('root'))"],"sourceRoot":""}